// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Сonfectionery.Infrastructure;

namespace Сonfectionery.Infrastructure.Migrations
{
    [DbContext(typeof(СonfectioneryContext))]
    partial class СonfectioneryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Сonfectionery.Domain.Aggregates.OrderAggregate.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("_orderDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("OrderDate");

                    b.Property<int>("_orderStatusId")
                        .HasColumnType("int")
                        .HasColumnName("OrderStatusId");

                    b.Property<string>("_title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Title");

                    b.HasKey("Id")
                        .HasName("PK_Order");

                    b.HasIndex("_orderStatusId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("Сonfectionery.Domain.Aggregates.OrderAggregate.OrderItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PieId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("_discount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Discount");

                    b.Property<decimal>("_unitPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("UnitPrice");

                    b.Property<int>("_units")
                        .HasColumnType("int")
                        .HasColumnName("Units");

                    b.HasKey("Id")
                        .HasName("PK_OrderItem");

                    b.HasIndex("OrderId");

                    b.HasIndex("PieId");

                    b.ToTable("OrderItem");
                });

            modelBuilder.Entity("Сonfectionery.Domain.Aggregates.OrderAggregate.OrderStatus", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id")
                        .HasName("PK_OrderStatus");

                    b.ToTable("OrderStatus");
                });

            modelBuilder.Entity("Сonfectionery.Domain.Aggregates.PieAggregate.Pie", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("_description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<string>("_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.HasKey("Id")
                        .HasName("PK_Pie");

                    b.ToTable("Pie");
                });

            modelBuilder.Entity("Сonfectionery.Domain.Aggregates.OrderAggregate.Order", b =>
                {
                    b.HasOne("Сonfectionery.Domain.Aggregates.OrderAggregate.OrderStatus", "OrderStatus")
                        .WithMany()
                        .HasForeignKey("_orderStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrderStatus");
                });

            modelBuilder.Entity("Сonfectionery.Domain.Aggregates.OrderAggregate.OrderItem", b =>
                {
                    b.HasOne("Сonfectionery.Domain.Aggregates.OrderAggregate.Order", null)
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Сonfectionery.Domain.Aggregates.PieAggregate.Pie", null)
                        .WithMany()
                        .HasForeignKey("PieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Сonfectionery.Domain.Aggregates.PieAggregate.Pie", b =>
                {
                    b.OwnsMany("Сonfectionery.Domain.Aggregates.PieAggregate.Ingredient", "Ingredients", b1 =>
                        {
                            b1.Property<Guid>("PieId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<bool>("IsAllergen")
                                .HasColumnType("bit");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasMaxLength(250)
                                .HasColumnType("nvarchar(250)");

                            b1.Property<double>("RelativeAmount")
                                .HasColumnType("float");

                            b1.HasKey("PieId", "Id");

                            b1.ToTable("Ingredient");

                            b1.WithOwner()
                                .HasForeignKey("PieId");
                        });

                    b.OwnsOne("Сonfectionery.Domain.Aggregates.PieAggregate.Portions", "Portions", b1 =>
                        {
                            b1.Property<Guid>("PieId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Maximum")
                                .HasColumnType("int");

                            b1.Property<int>("Minimum")
                                .HasColumnType("int");

                            b1.HasKey("PieId");

                            b1.ToTable("Pie");

                            b1.WithOwner()
                                .HasForeignKey("PieId");
                        });

                    b.Navigation("Ingredients");

                    b.Navigation("Portions");
                });

            modelBuilder.Entity("Сonfectionery.Domain.Aggregates.OrderAggregate.Order", b =>
                {
                    b.Navigation("OrderItems");
                });
#pragma warning restore 612, 618
        }
    }
}
